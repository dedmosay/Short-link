{"version":3,"sources":["../node_modules/peerjs/dist sync","context/AuthContext.js","pages/AuthPage.js","hooks/http.hook.js","hooks/message.hook.js","pages/CreatePage.js","pages/DetailPage.js","pages/LinksPage.js","hooks/auth.hook.js","App.js","routes.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","noop","AuthContext","createContext","token","userId","login","logout","isAuthentificated","AuthPage","auth","useContext","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","message","clearError","useHttp","email","password","form","setForm","text","window","M","toast","html","useEffect","changeHandler","event","target","name","value","registerHandler","console","log","loginHandler","className","placeholder","type","onChange","htmlFor","onClick","disabled","CreatePage","socket","io","peerId","uid","emit","on","arrPeerId","forEach","$","append","remove","peer","Peer","host","port","secure","openStream","cb","navigator","mediaDevices","getUserMedia","audio","video","width","height","then","stream","catch","err","playVideo","idVideo","document","getElementById","srcObject","onloadedmetadata","play","call","answer","remoteStream","style","marginBottom","frienId","val","videoCodec","audioReceiveEnabled","btnCall","DetailPage","LinksPage","storageName","App","setToken","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","to","Provider","ReactDOM","render"],"mappings":"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","file":"static/js/main.7e18a336.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 58;","import {createContext} from 'react';\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: noop,\r\n    logout: noop,\r\n    isAuthentificated: false \r\n}) ","import React, {useContext, useEffect, useState } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport {useMessage} from '../hooks/message.hook';\r\nimport './style/AuthPage.css'\r\n\r\n\r\nexport const AuthPage = () => {\r\n    // Работа с хуками\r\n\r\n    const auth = useContext(AuthContext)\r\n\r\n    const { loading, error, request, clearError } = useHttp() // извлекаем из хука\r\n\r\n    const [form, setForm] = useState({\r\n        email: '', password: ''\r\n    })\r\n\r\n    const message = useMessage();\r\n\r\n    useEffect(() => {\r\n        message(error)\r\n        clearError();\r\n    }, [error, message, clearError]) \r\n\r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value} );\r\n    }\r\n\r\n    const registerHandler = async() => { \r\n        try{\r\n             // данные прилетают с сервера (1-это API, 2-метод, 3-данные которые хотим передать на сервер - mail & pass )\r\n            const data = await request( \"/api/auth/register\", 'POST', {...form} );\r\n            message(data.message);\r\n        }catch(e) {\r\n            console.log(\"TEST\", e)\r\n            // Обработка ошибок была завершена в useHttp\r\n        }\r\n    }\r\n\r\n    const loginHandler = async() => { \r\n        try{\r\n             // данные прилетают с сервера (1-это API, 2-метод, 3-данные которые хотим передать на сервер - mail & pass )\r\n            const data = await request( \"/api/auth/login\", 'POST', {...form} );\r\n            // message(data.message);\r\n            auth.login(data.token, data.userId ); \r\n        }catch(e) {\r\n            console.log(\"TEST\", e)\r\n            // Обработка ошибок была завершена в useHttp\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s6 offset-s3\">\r\n                <h1>short link</h1>\r\n                <div className=\"card white darken-4\">\r\n                    <div className=\"card-content white-text\">\r\n                        <span className=\"card-title\">Авторизация</span>\r\n                        <div className=\"input-field\">\r\n                            <input \r\n                                placeholder=\"Введите email\"\r\n                                id=\"email\"\r\n                                type=\"text\"\r\n                                name=\"email\"\r\n                                className=\"blue-input\"\r\n                                onChange={changeHandler}\r\n                            /> \r\n                            <label htmlFor=\"email\">Email</label>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <input \r\n                                placeholder=\"Введите пароль\"\r\n                                id=\"password\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                className=\"blue-input\"\r\n                                onChange={changeHandler}\r\n                            />\r\n                            <label htmlFor=\"password\">Пароль</label> \r\n                        </div>\r\n                   \r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <button \r\n                            className=\"btn white green-text\"\r\n                            onClick={loginHandler}\r\n                            disabled={loading} // блокируем кнопки после нажатия\r\n                        >\r\n                            Войти\r\n                        </button>\r\n                        <button \r\n                            className=\"btn green accent-7\"\r\n                            onClick={registerHandler}\r\n                            disabled={loading} // блокируем кнопки после нажатия\r\n                        >\r\n                            Создать аккаунт\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useState, useCallback} from 'react';\r\n\r\n\r\nexport const useHttp = () => {\r\n\r\n    // loading - флаг для взаимодействия\r\n\r\n    const [loading, setLoading] = useState (false);\r\n    \r\n    const [error, setError] = useState (null);\r\n\r\n    const request = useCallback( async( url, method = 'GET', body = null, headers = {} ) => {\r\n        \r\n        setLoading(true) // Загрузка\r\n        try {  \r\n            if(body) {\r\n                body = JSON.stringify(body)\r\n                headers['Content-type'] = 'application/json'\r\n            }\r\n            const response = await fetch(url, { method, body, headers });\r\n            const data = await response.json() \r\n            if (!response.ok) { \r\n                throw new Error(data.message || 'Что-то пошло не так');\r\n            }\r\n            setLoading(false); // Запрос отработал\r\n            return data;\r\n\r\n        } catch(e) {\r\n            setLoading(false); // Запрос отработал\r\n            setError(e.message) // !response.ok\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    // const clearError = () => setError(null);\r\n    const clearError = useCallback(() => setError(null),  [])\r\n    \r\n\r\n    return { loading, request, error, clearError } // Export\r\n}","import {useCallback} from 'react';\r\n\r\nexport const useMessage = () => {\r\n    return useCallback( text => {\r\n        if(window.M && text) {\r\n            window.M.toast({html: text});\r\n        }\r\n    }, [])\r\n}","import React from 'react';\r\nimport Peer from 'peerjs';\r\nimport $ from 'jquery';\r\nimport uid from 'uid';\r\nimport io from 'socket.io-client';\r\nimport \"./style.css\";\r\n\r\nexport const CreatePage = () => {\r\n    const NEW_PEER_ID = 'NEW_PEER_ID';\r\n    const ONLINE_PEER_ARRAY = 'ONLINE_PEER_ARRAY';\r\n    const NEW_CLIENT_CONNECT = 'NEW_CLIENT_CONNECT';\r\n    const SOMEONE_DISCONNECTED = 'SOMEONE_DISCONNECTED';\r\n\r\n    const LOCAL = \"http://localhost:5000/\";\r\n    const HEROKU_H = \"home-learning.herokuapp.com\";\r\n\r\n    const socket = io(HEROKU_H); \r\n\r\n    const CONFIG_PEER = {\r\n        host: 'jkq.herokuapp.com',\r\n        port: 443,\r\n        secure: true,\r\n    }\r\n\r\n    const peerId =  getPeer();\r\n    function getPeer(){\r\n        const id = uid(2)\r\n        return id;\r\n    }\r\n\r\n    socket.emit(NEW_PEER_ID, peerId)\r\n    \r\n    socket.on(ONLINE_PEER_ARRAY, arrPeerId => {\r\n        arrPeerId.forEach(id => {\r\n            $('#ulPeer').append(`<li id=\"${id}\">${id} </li>`) \r\n        })\r\n    });    \r\n    \r\n    socket.on(NEW_CLIENT_CONNECT, id => {\r\n           $('#ulPeer').append(`<li id=\"${id}\">${id} </li>`) \r\n        })\r\n\r\n    socket.on(SOMEONE_DISCONNECTED, peerId => {\r\n        $(`#${peerId}`).remove();\r\n    });\r\n    \r\n    const peer = new Peer(peerId, CONFIG_PEER );\r\n\r\n        function btnCall(){\r\n            \r\n            const frienId = $('#txtFrienId').val();\r\n             $('#ulCallFrien').append(`<li>Звонок ${frienId}  </li>`)\r\n            openStream(stream=>{\r\n                playVideo(stream, 'localStream');\r\n                const call = peer.call(frienId, stream \r\n                    ,{\r\n                        videoCodec: 'H264',\r\n                        audioReceiveEnabled: true,\r\n                      }\r\n                    );\r\n                call.on('stream', remoteStream => playVideo(remoteStream, 'friendStream'))\r\n            })\r\n        }\r\n        \r\n        function openStream(cb) {\r\n            const constraints = { audio: false, video: { width: 1280, height: 720 } };\r\n            navigator.mediaDevices.getUserMedia( constraints )\r\n            .then(stream => { \r\n                cb(stream) \r\n            })\r\n            .catch(err => {\r\n                console.log('ERROR:', err)\r\n            })\r\n        } \r\n    \r\n        function playVideo(stream, idVideo) {\r\n            const video = document.getElementById(idVideo)\r\n            video.srcObject = stream;\r\n            video.onloadedmetadata = function(){   \r\n                video.play();\r\n                console.log(stream);\r\n            }\r\n        }\r\n\r\n        peer.on('call', (call)=>{\r\n            openStream(stream => {\r\n                playVideo (stream, 'localStream');\r\n                call.answer(stream);\r\n                call.on('stream', remoteStream => playVideo(remoteStream, 'friendStream'))\r\n            });\r\n        });\r\n    \r\n    return (\r\n            <div className=\"inter\">\r\n                <div className=\"row\">\r\n                    <ul> \r\n                        <div className=\"col l9 s14\">  \r\n                            <div className=\"container\" style={{marginBottom: 10}}>     \r\n                                <h5> Мой id:  {peer.id} </h5> \r\n                                <div className='videos'>\r\n                                    <video  id=\"localStream\" className=\"my-video\"></video>\r\n                                    <video  id=\"friendStream\" className=\"user-video\"></video>\r\n                                </div>\r\n                                <br></br>\r\n                                <input type=\"text\" placeholder=\"Чтобы позвонить преподавателю, вставьте его ID\" id=\"txtFrienId\"></input>\r\n                                <br></br>\r\n                                <input type=\"submit\" onClick={()=>btnCall()} value=\"Вызов\" />\r\n                            </div>\r\n                        </div>\r\n                    </ul>\r\n                    <ul>\r\n                        <div className=\"container\" style={{marginBottom: 10}}>    \r\n                            <ul> \r\n                                <h5> Online: </h5>\r\n                                <li id=\"ulPeer\"></li>\r\n                            </ul>\r\n                        </div>\r\n                    </ul> \r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n// import React from 'react';\r\n\r\n// export const CreatePage = () => {\r\n//     return (\r\n//         <div>\r\n//             <h1>Create Page</h1>\r\n//         </div>\r\n//     )\r\n// }","import React from 'react';\r\n\r\nexport const DetailPage = () => {\r\n    return (\r\n        <div>\r\n            <h1>Detail Page</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const LinksPage = () => {\r\n    return (\r\n        <div>\r\n            <h1>Links Page</h1>\r\n        </div>\r\n    )\r\n}","import {useState, useCallback, useEffect} from 'react';\r\n\r\nconst storageName = 'userData';\r\n\r\nexport const useAuth = () => {\r\n    // используем localStorage для временного храниния пароля\r\n    const [token, setToken] = useState(null);\r\n    const [userId, setUserId] = useState(null);\r\n\r\n    // задаем token и передавать id \r\n    const login = useCallback((jwtToken, id) => {\r\n        setToken(jwtToken);\r\n        setUserId(id);\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userId: id, token: jwtToken\r\n        }));\r\n    }, []); \r\n\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        setUserId(null);\r\n        localStorage.removeItem(storageName)\r\n    }, []);\r\n\r\n    useEffect( () => {\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n        if (data && data.token) {\r\n            login(data.token && data.userId)\r\n        }\r\n    }, [login]);\r\n\r\n    return { login, logout, token, userId }\r\n} ","import React from 'react';\r\nimport { useRoutes } from './routes';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport { useAuth } from './hooks/auth.hook';\r\nimport 'materialize-css';\r\nimport { AuthContext } from './context/AuthContext';\r\n\r\nfunction App() {\r\n  // token, login, logout, userId  - передаются через контекст всему приложению\r\n  const { token, login, logout, userId } = useAuth();\r\n  \r\n  const isAuthentificated  = !!token; // флаг который говорит, зарегистрирован пользователь или нет !!приводит к значению Boolean\r\n  const routes = useRoutes(isAuthentificated); // теперь если значение (true) то пользователь переходит в систему\r\n  console.log(\"isAuthentificated\",isAuthentificated)\r\n  return (\r\n    <AuthContext.Provider value={ \r\n      {\r\n        token, \r\n        login, \r\n        logout, \r\n        userId, \r\n        isAuthentificated \r\n      }\r\n    } >\r\n      <Router>\r\n        <div className=\"container\">\r\n          {routes}\r\n        </div>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport { AuthPage } from './pages/AuthPage';\r\nimport { CreatePage } from './pages/CreatePage';\r\nimport { DetailPage } from './pages/DetailPage';\r\nimport { LinksPage } from './pages/LinksPage';\r\n\r\nexport const useRoutes = isAutentificated  => {\r\n    if (isAutentificated) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/links\" exact>\r\n                    <LinksPage/>\r\n                </Route>\r\n                <Route path=\"/create\" exact>\r\n                    <CreatePage/>\r\n                </Route>\r\n                <Route path=\"/detail/:id\" exact>\r\n                    <DetailPage/>\r\n                </Route>\r\n                <Redirect to=\"/create\"/>\r\n            </Switch>\r\n        )\r\n    }\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <AuthPage />\r\n            </Route>\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />, document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}